schemaVersion: 2.1.0
metadata:
  name: liferay
  namespace: opentlc-mgr-devspaces
attributes:
  .che/che-theia-plugins.yaml: |
    - id: redhat/java11/latest
      override:
        sidecar: {}
        preferences:
          java.server.launchMode: Standard
  .vscode/extensions.json: |-
    {
      "recommendations": [
        "redhat/java11"
      ]
    }
  .vscode/launch.json: |
    {
     "version": "0.2.0",
     "configurations": [
       {
         "type": "java",
         "name": "Debug (Attach) - Remote",
         "request": "attach",
         "hostName": "localhost",
         "port": 8000
       }]
     }
  metadata-name-field: generateName
  metadata-name-original-value: liferay
projects:
  - git:
      remotes:
        origin: 'https://github.com/DaniellaFreese/liferay-blade-samples.git'
    name: liferay-blade-samples
components:
  - attributes:
      app.kubernetes.io/name: maven
      che-theia.eclipse.org/vscode-extensions:
        - 'http://plugin-registry.openshift-devspaces.svc:8080/resources/github_com/redhat-developer/devspaces-vscode-extensions/releases/download/7_44-che-assets/java-0.82.0-369.vsix'
        - 'http://plugin-registry.openshift-devspaces.svc:8080/resources/github_com/redhat-developer/devspaces-vscode-extensions/releases/download/7_44-che-assets/vscode-java-debug-0.26.0.vsix'
        - 'http://plugin-registry.openshift-devspaces.svc:8080/resources/open-vsx_org/api/vscjava/vscode-java-test/0_28_1/file/vscjava.vscode-java-test-0.28.1.vsix'
      che-theia.eclipse.org/vscode-preferences:
        java.server.launchMode: Standard
    container:
      args:
        - sh
        - '-c'
        - '${PLUGIN_REMOTE_ENDPOINT_EXECUTABLE}'
      endpoints:
        - exposure: public
          name: health-checks-endpoint
          protocol: http
          targetPort: 8080
      env:
        - name: JAVA_OPTS
          value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
        - name: MAVEN_OPTS
          value: $(JAVA_OPTS)
        - name: PLUGIN_REMOTE_ENDPOINT_EXECUTABLE
          value: /remote-endpoint/plugin-remote-endpoint
        - name: THEIA_PLUGINS
          value: 'local-dir:///plugins/sidecars/maven'
        - name: CHE_DASHBOARD_URL
          value: 'https://devspaces.apps.cluster-cchzj.cchzj.sandbox1772.opentlc.com'
        - name: CHE_PLUGIN_REGISTRY_URL
          value: 'https://devspaces.apps.cluster-cchzj.cchzj.sandbox1772.opentlc.com/plugin-registry/v3'
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: 'http://plugin-registry.openshift-devspaces.svc:8080/v3'
      image: 'registry.redhat.io/codeready-workspaces/plugin-java11-rhel8@sha256:d0337762e71fd4badabcb38a582b2f35e7e7fc1c9c0f2e841e339d45b7bd34ed'
      memoryLimit: 512Mi
      mountSources: true
      sourceMapping: /projects
      volumeMounts:
        - name: m2
          path: /home/jboss/.m2
        - name: remote-endpoint
          path: /remote-endpoint
        - name: plugins
          path: /plugins
    name: maven
  - name: liferay
    openshift:
      uri: https://raw.githubusercontent.com/renatoppuccini/devworspaces/main/liferay.yaml
  - name: m2
    volume: {}
commands:
  - exec:
      commandLine: mvn clean install
      component: maven
      label: 1. Build
      workingDir: '${PROJECTS_ROOT}/liferay-blade-samples/maven'
    id: build
  - exec:
      commandLine: mvn test
      component: maven
      label: 2. Run tests
      workingDir: '${PROJECTS_ROOT}/liferay-blade-samples/maven'
    id: run-tests
  - exec:
      commandLine: cp *.jar /opt/liferay/deploy/
      component: liferay
      label: 3. Deploy Artifact to Lifery
      workingDir: '${PROJECTS_ROOT}/liferay-blade-samples/maven/apps/jsp-portlet/target'
    id: deploy-artifact-to-lifery
